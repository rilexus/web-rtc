[{"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/reportWebVitals.js":"1","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/index.js":"2","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/App.tsx":"3","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/socket/use-subscription/useSubscription.ts":"4","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/socket/react-socket-connector/react-socket-connector.tsx":"5","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/Login.page.tsx":"6","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx":"7","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/hooks/use-local-storage/useLocalStorage.ts":"8","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/pages.ts":"9","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/components/LoginInput.component.tsx":"10","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/components/labeled-input/LabeledInput.tsx":"11","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/components/logout-button/logout-button.tsx":"12","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/components/user-list/UserList.tsx":"13","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/components/user-list/hooks/use-user-list/useUserList.ts":"14","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/evn.ts":"15","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/socket/socket.ts":"16","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/WebRTC.ts":"17","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/web-rtc-chat/WebRTCChat.tsx":"18","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/web-rtc/EventEmitter.ts":"19","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/Api.ts":"20","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/hooks/useAuthentication.ts":"21","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/types/Authentication.action-type.ts":"22","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/context/Authentication.context.tsx":"23","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/context/default-context-value.ts":"24","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/providers/Authentication.provider.tsx":"25","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/components/buttons/Button.tsx":"26","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/http/HttpStatus.enum.ts":"27","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/http/Http.service.ts":"28","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/Authentication.service.ts":"29"},{"size":362,"mtime":1608818216960,"results":"30","hashOfConfig":"31"},{"size":747,"mtime":1609602595707,"results":"32","hashOfConfig":"31"},{"size":1220,"mtime":1609602675220,"results":"33","hashOfConfig":"31"},{"size":457,"mtime":1609233378497,"results":"34","hashOfConfig":"31"},{"size":990,"mtime":1609081857542,"results":"35","hashOfConfig":"31"},{"size":322,"mtime":1609083248732,"results":"36","hashOfConfig":"31"},{"size":4737,"mtime":1609344296925,"results":"37","hashOfConfig":"31"},{"size":1622,"mtime":1609603179239,"results":"38","hashOfConfig":"31"},{"size":91,"mtime":1609065570578,"results":"39","hashOfConfig":"31"},{"size":1323,"mtime":1609602460354,"results":"40","hashOfConfig":"31"},{"size":599,"mtime":1609066602388,"results":"41","hashOfConfig":"31"},{"size":638,"mtime":1609603423129,"results":"42","hashOfConfig":"31"},{"size":1161,"mtime":1609671671078,"results":"43","hashOfConfig":"31"},{"size":452,"mtime":1609083079846,"results":"44","hashOfConfig":"31"},{"size":565,"mtime":1609429679533,"results":"45","hashOfConfig":"31"},{"size":178,"mtime":1609671429048,"results":"46","hashOfConfig":"31"},{"size":3922,"mtime":1610046605695,"results":"47","hashOfConfig":"31"},{"size":3574,"mtime":1610046606250,"results":"48","hashOfConfig":"31"},{"size":1097,"mtime":1609421091699,"results":"49","hashOfConfig":"31"},{"size":830,"mtime":1609605920649,"results":"50","hashOfConfig":"31"},{"size":473,"mtime":1609602379775,"results":"51","hashOfConfig":"31"},{"size":424,"mtime":1609602459869,"results":"52","hashOfConfig":"31"},{"size":704,"mtime":1609602379778,"results":"53","hashOfConfig":"31"},{"size":205,"mtime":1609603237760,"results":"54","hashOfConfig":"31"},{"size":2081,"mtime":1609606401550,"results":"55","hashOfConfig":"31"},{"size":172,"mtime":1609603423121,"results":"56","hashOfConfig":"31"},{"size":62,"mtime":1609606140161,"results":"57","hashOfConfig":"31"},{"size":348,"mtime":1609605546319,"results":"58","hashOfConfig":"31"},{"size":654,"mtime":1609605880886,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1xjgaqy",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/reportWebVitals.js",[],["127","128"],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/index.js",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/App.tsx",["129","130"],"import React, { useEffect } from \"react\";\nimport { socketConnector } from \"./socket/react-socket-connector/react-socket-connector\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { LoginPage } from \"./pages/login/Login.page\";\nimport { useHistory } from \"react-router-dom\";\nimport { PAGES } from \"./pages/pages\";\nimport { WebRTCChat } from \"./pages/web-rtc-chat/WebRTCChat\";\nimport { useAuthentication } from \"./authentication/hooks/useAuthentication\";\n\nfunction App(props: any) {\n  const [{ isLoggedIn }, dispatch] = useAuthentication();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(PAGES.chat.path);\n    } else {\n      history.push(PAGES.login.path);\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Switch>\n          <Route path={PAGES.login.path}>\n            <LoginPage />\n          </Route>\n          <Route path={PAGES.chat.path}>\n            <WebRTCChat />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst AppWithSocket = socketConnector((dispatch: any) => ({\n  sendEvents: () => {\n    dispatch({ type: \"events\", payload: { data: \"fromApp\" } });\n  },\n}))(App);\n\nexport default AppWithSocket;\n",["131","132"],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/socket/use-subscription/useSubscription.ts",[],["133","134"],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/socket/react-socket-connector/react-socket-connector.tsx",["135"],"import React, { ReactNode } from \"react\";\nimport { socket } from \"../socket\";\n\ntype Action = { type: string; [key: string]: any } | Function;\n\nfunction socketConnector(\n  socketInstanceMapper: (dispatch: (action: Action) => void) => void\n) {\n  const dispatch = (action: Action) => {\n    if (typeof action === \"function\") {\n      action(dispatch);\n    } else {\n      return new Promise((resolve, rej) => {\n        try {\n          const { type, ...rest } = action;\n          socket.emit(\n            type,\n            {\n              ...rest,\n            },\n            resolve\n          );\n        } catch (e) {\n          rej(e);\n        }\n      });\n    }\n  };\n\n  const mappedSocket = socketInstanceMapper(dispatch);\n\n  const WithSocket: any = (Component: any) => {\n    WithSocket.displayName = `withSocket(${\n      Component.displayName || \"Component\"\n    })`;\n    return (props: any) => <Component {...props} {...mappedSocket} />;\n  };\n\n  return WithSocket;\n}\n\nexport { socketConnector };\n","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/Login.page.tsx",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx",["136","137","138","139"],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/hooks/use-local-storage/useLocalStorage.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/pages.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/components/LoginInput.component.tsx",["140"],"import React, { useState } from \"react\";\nimport { LabeledInput } from \"../../../components/labeled-input/LabeledInput\";\nimport { useAuthentication } from \"../../../authentication/hooks/useAuthentication\";\nimport { AuthenticationActionTypes } from \"../../../authentication/types/Authentication.action-type\";\n\nconst LoginInput = () => {\n  const [_, dispatch] = useAuthentication();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (name: string, password: string) => {\n    if (name /* && password */) {\n      dispatch({\n        type: AuthenticationActionTypes.login,\n        payload: { name, password },\n      });\n    }\n  };\n\n  const handleLogin = () => {\n    login(name, password);\n  };\n\n  return (\n    <div>\n      <LabeledInput\n        placeholder={\"Name\"}\n        value={name}\n        type={\"text\"}\n        label={\"Name\"}\n        id={\"nameInput\"}\n        onChange={(event) => setName(event.target.value)}\n      />\n      <LabeledInput\n        placeholder={\"Password\"}\n        value={password}\n        type={\"password\"}\n        label={\"Password\"}\n        id={\"passwordInput\"}\n        onChange={(event) => setPassword(event.target.value)}\n      />\n      <div>\n        <button onClick={handleLogin}>Login</button>\n      </div>\n    </div>\n  );\n};\n\nexport { LoginInput };\n","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/components/labeled-input/LabeledInput.tsx",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/components/logout-button/logout-button.tsx",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/components/user-list/UserList.tsx",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/components/user-list/hooks/use-user-list/useUserList.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/evn.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/socket/socket.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/WebRTC.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/web-rtc-chat/WebRTCChat.tsx",["141","142","143","144","145"],"import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { socketConnector } from \"../../socket/react-socket-connector/react-socket-connector\";\nimport { UserList } from \"../chat/components/user-list/UserList\";\nimport { LogoutButton } from \"../chat/components/logout-button/logout-button\";\nimport { SOCKET_ADDRESS, SOCKET_PREFIX } from \"../../evn\";\nimport { WebRTC } from \"../chat/WebRTC\";\nimport { useAuthentication } from \"../../authentication/hooks/useAuthentication\";\nimport SocketIO from \"socket.io\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst connectVideo = (videoRef: any, stream: any) => {\n  videoRef.current.srcObject = stream;\n};\n\nconst _WebRTCChat = ({ emitVideoOffer }: any) => {\n  const webRTC = useRef(\n    new WebRTC({\n      iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n      socket: {\n        url: SOCKET_ADDRESS,\n        options: {\n          path: `/${SOCKET_PREFIX}`,\n        },\n      },\n    })\n  );\n  const [{ username: currentUserName }] = useAuthentication();\n  const ownStream = useRef<any>();\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n  const stream = useRef<any>();\n\n  useEffect(() => {\n    webRTC.current.on(\"connect\", (socket: SocketIO.Socket) => {\n      socket.emit(\"associate\", {\n        socketId: socket.id,\n        username: currentUserName,\n      });\n    });\n    return () => {\n      webRTC.current.disconnect();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    webRTC.current.on(\"call\", async (call) => {\n      stream.current = await openMediaDevices({\n        video: true,\n        audio: true,\n      });\n\n      ownVideoRef.current.srcObject = stream.current;\n      call.answer(stream.current);\n\n      // TODO: call.on is not called the function is not implemented\n      call.on(\"stream\", function ({ stream }: any) {\n        foreignVideoRef.current.srcObject = stream;\n      });\n    });\n  }, []);\n\n  const onVideo = async ({ name, socketId }: any) => {\n    stream.current = await openMediaDevices({\n      video: true,\n      audio: true,\n    });\n    const call = webRTC.current.call(socketId, stream.current);\n\n    ownVideoRef.current.srcObject = stream.current;\n\n    call.on(\"stream\", ({ stream }) => {\n      console.log(\"got stream: \", stream);\n      foreignVideoRef.current.srcObject = stream;\n    });\n  };\n\n  const onAudio = ({ name, socketId }: any) => {};\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n      <div>\n        <div>\n          <div>local</div>\n          <div>\n            <video\n              id={\"ownVideo\"}\n              ref={ownVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>remote</div>\n          <div>\n            <video\n              id={\"foreignVideo\"}\n              ref={foreignVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst WebRTCChat = socketConnector((dispatch) => {\n  return {\n    emitVideoOffer: (offer: any, from: string, to: string) =>\n      dispatch({ type: \"video:offer\", offer, from, to }),\n  };\n})(_WebRTCChat);\nexport { WebRTCChat };\n","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/web-rtc/EventEmitter.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/Api.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/hooks/useAuthentication.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/types/Authentication.action-type.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/context/Authentication.context.tsx",["146"],"import React from \"react\";\nimport { createContext } from \"react\";\nimport {\n  AuthenticationDispatch,\n  AuthenticationType,\n} from \"../types/Authentication.type\";\nimport { defaultAuthentication } from \"./default-context-value\";\n\nconst AuthValueContext = createContext<AuthenticationType>({\n  ...defaultAuthentication,\n});\n\nconst AuthDispatchContext = createContext<AuthenticationDispatch>(() => {});\n\nconst ValueProvider: any = AuthValueContext.Provider;\nValueProvider.displayName = \"ValueProvider\";\n\nconst DispatchProvider: any = AuthDispatchContext.Provider;\nDispatchProvider.displayName = \"DispatchProvider\";\n\nexport {\n  ValueProvider,\n  DispatchProvider,\n  AuthValueContext,\n  AuthDispatchContext,\n};\n","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/context/default-context-value.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/providers/Authentication.provider.tsx",["147","148"],"import { useLocalStorage } from \"../../hooks/use-local-storage/useLocalStorage\";\nimport { api } from \"../../api/Api\";\nimport React from \"react\";\nimport {\n  DispatchProvider,\n  ValueProvider,\n} from \"../context/Authentication.context\";\nimport { AuthenticationType } from \"../types/Authentication.type\";\nimport {\n  AuthenticationActions,\n  AuthenticationActionTypes,\n  LoginAction,\n  LogoutAction,\n} from \"../types/Authentication.action-type\";\nimport { defaultAuthentication } from \"../context/default-context-value\";\nimport { HttpStatus } from \"../../api/http/HttpStatus.enum\";\n// import { HttpException } from \"../../api/http/Http.exception\";\n\nconst AuthenticationProvider = ({ children }: any) => {\n  const [auth, setValue, remove] = useLocalStorage<AuthenticationType>(\n    \"login\",\n    {\n      ...defaultAuthentication,\n    }\n  );\n\n  const isAuthenticated = (): boolean => {\n    return false;\n  };\n\n  const login = async (username: string, password: string) => {\n    // socketLogin(name, password).then((res: any) => {\n    //   console.log(res);\n    //   setValue((val) => ({ ...val, isLoggedIn: true, name: name }));\n    // });\n    const res = await api.login(username, password);\n    if (res.statusCode === HttpStatus.FORBIDDEN) {\n      // TODO: implement error handling\n      // throw new HttpException('Forbidden', HttpStatus.FORBIDDEN)\n      return;\n    }\n    setValue((v) => ({ ...v, isLoggedIn: true, username: username }));\n  };\n\n  const logout = () => {\n    setValue((val) => ({ ...val, isLoggedIn: false, username: \"\", key: \"\" }));\n  };\n\n  const dispatch = (action: AuthenticationActions) => {\n    const _switch = {\n      [AuthenticationActionTypes.login]: (action: LoginAction) =>\n        login(action.payload.name, action.payload.password),\n      [AuthenticationActionTypes.logout]: (action: LogoutAction) => logout(),\n    };\n    // @ts-ignore\n    _switch[action.type]?.(action);\n  };\n\n  return (\n    <ValueProvider value={auth}>\n      <DispatchProvider value={dispatch}>{children}</DispatchProvider>\n    </ValueProvider>\n  );\n};\n\nexport { AuthenticationProvider };\n","/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/components/buttons/Button.tsx",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/http/HttpStatus.enum.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/http/Http.service.ts",[],"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/authentication/Authentication.service.ts",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":26,"nodeType":"155","messageId":"156","endLine":11,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":20,"column":6,"nodeType":"159","endLine":20,"endColumn":18,"suggestions":"160"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"149","replacedBy":"161"},{"ruleId":"151","replacedBy":"162"},{"ruleId":"153","severity":1,"message":"163","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"164","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"165","line":1,"column":53,"nodeType":"155","messageId":"156","endLine":1,"endColumn":61},{"ruleId":"153","severity":1,"message":"166","line":7,"column":35,"nodeType":"155","messageId":"156","endLine":7,"endColumn":41},{"ruleId":"153","severity":1,"message":"167","line":20,"column":7,"nodeType":"155","messageId":"156","endLine":20,"endColumn":21},{"ruleId":"153","severity":1,"message":"168","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":11},{"ruleId":"153","severity":1,"message":"165","line":1,"column":53,"nodeType":"155","messageId":"156","endLine":1,"endColumn":61},{"ruleId":"153","severity":1,"message":"169","line":14,"column":7,"nodeType":"155","messageId":"156","endLine":14,"endColumn":19},{"ruleId":"153","severity":1,"message":"170","line":31,"column":9,"nodeType":"155","messageId":"156","endLine":31,"endColumn":18},{"ruleId":"157","severity":1,"message":"171","line":44,"column":14,"nodeType":"155","endLine":44,"endColumn":21},{"ruleId":"157","severity":1,"message":"172","line":46,"column":6,"nodeType":"159","endLine":46,"endColumn":8,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"174","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"175","line":20,"column":26,"nodeType":"155","messageId":"156","endLine":20,"endColumn":32},{"ruleId":"153","severity":1,"message":"176","line":27,"column":9,"nodeType":"155","messageId":"156","endLine":27,"endColumn":24},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["179"],["177"],["178"],"'ReactNode' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'WebRTC' is defined but never used.","'emitVideoOffer' is assigned a value but never used.","'_' is assigned a value but never used.","'connectVideo' is assigned a value but never used.","'ownStream' is assigned a value but never used.","The ref value 'webRTC.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'webRTC.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'currentUserName'. Either include it or remove the dependency array.",["180"],"'React' is defined but never used.","'remove' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"185","text":"186"},"Update the dependencies array to be: [currentUserName]",{"range":"187","text":"188"},[722,734],"[history, isLoggedIn]",[1517,1519],"[currentUserName]"]