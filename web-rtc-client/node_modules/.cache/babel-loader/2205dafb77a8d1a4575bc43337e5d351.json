{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useSubscription } from \"../../socket/use-subscription/useSubscription\";\nimport { socket } from \"../../socket/socket\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:192.168.2.120:3478\",\n    username: \"username\",\n    credential: \"password\"\n  }]\n};\nconst peerConnection = new RTCPeerConnection(configuration);\n\nconst ChatPage = () => {\n  _s();\n\n  const [hasOffer, setHasOffer] = useState(false);\n  const offerRef = useRef({\n    from: null,\n    offer: null\n  });\n  const [isCalling, setIsCalling] = useState(false);\n  const [{\n    name: currentUserName\n  }] = useAuthentication();\n  useSubscription(\"video:answer\", async ({\n    answer,\n    from\n  }) => {\n    // const remoteDesc = new RTCSessionDescription(answer);\n    // await peerConnection.setRemoteDescription(remoteDesc);\n    console.log(answer);\n  });\n  useSubscription(\"video:offer\", async ({\n    offer,\n    from\n  }) => {\n    setHasOffer(true);\n    offerRef.current = {\n      offer,\n      from\n    };\n    console.log(offer, from);\n  });\n\n  const pickUp = () => {\n    if (offerRef.current.offer) {\n      // create answer\n      const {\n        from\n      } = offerRef.current;\n      const answer = {};\n      socket.emit(\"video:answer\", {\n        answer,\n        to: from,\n        from: currentUserName\n      });\n    }\n  };\n\n  const hangUp = () => {\n    if (offerRef.current) {// implement call decline\n    }\n  };\n\n  const onVideo = async name => {\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    setIsCalling(true);\n    socket.emit(\"video:offer\", {\n      offer,\n      to: name,\n      from: currentUserName\n    });\n  };\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), hasOffer && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"CALLING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pickUp,\n        children: \"PICK UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"HANG UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), isCalling && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"CALLING...!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"mq3gfhfiioXty857wOvp2aRYeSc=\", false, function () {\n  return [useAuthentication, useSubscription, useSubscription];\n});\n\n_c = ChatPage;\nexport { ChatPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx"],"names":["React","useRef","useState","LogoutButton","UserList","useSubscription","socket","useAuthentication","configuration","iceServers","urls","username","credential","peerConnection","RTCPeerConnection","ChatPage","hasOffer","setHasOffer","offerRef","from","offer","isCalling","setIsCalling","name","currentUserName","answer","console","log","current","pickUp","emit","to","hangUp","onVideo","createOffer","setLocalDescription","onAudio"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useSubscription } from \"../../socket/use-subscription/useSubscription\";\nimport { socket } from \"../../socket/socket\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\n\nconst configuration = {\n  iceServers: [\n    {\n      urls: \"stun:192.168.2.120:3478\",\n      username: \"username\",\n      credential: \"password\",\n    },\n  ],\n};\nconst peerConnection = new RTCPeerConnection(configuration);\n\nconst ChatPage = () => {\n  const [hasOffer, setHasOffer] = useState(false);\n  const offerRef = useRef<{ from: string | null; offer: any }>({\n    from: null,\n    offer: null,\n  });\n  const [isCalling, setIsCalling] = useState(false);\n  const [{ name: currentUserName }] = useAuthentication();\n\n  useSubscription(\"video:answer\", async ({ answer, from }) => {\n    // const remoteDesc = new RTCSessionDescription(answer);\n    // await peerConnection.setRemoteDescription(remoteDesc);\n    console.log(answer);\n  });\n\n  useSubscription(\"video:offer\", async ({ offer, from }) => {\n    setHasOffer(true);\n    offerRef.current = { offer, from };\n    console.log(offer, from);\n  });\n\n  const pickUp = () => {\n    if (offerRef.current.offer) {\n      // create answer\n      const { from } = offerRef.current;\n      const answer = {};\n      socket.emit(\"video:answer\", { answer, to: from, from: currentUserName });\n    }\n  };\n\n  const hangUp = () => {\n    if (offerRef.current) {\n      // implement call decline\n    }\n  };\n\n  const onVideo = async (name: string) => {\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    setIsCalling(true);\n    socket.emit(\"video:offer\", { offer, to: name, from: currentUserName });\n  };\n\n  const onAudio = (name: string) => {};\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      {hasOffer && (\n        <div>\n          <div>CALLING....</div>\n          <button onClick={pickUp}>PICK UP</button>\n          <button>HANG UP</button>\n        </div>\n      )}\n      {isCalling && (\n        <div>\n          <div>CALLING...!</div>\n        </div>\n      )}\n      <LogoutButton />\n    </div>\n  );\n};\n\nexport { ChatPage };\n"]},"metadata":{},"sourceType":"module"}