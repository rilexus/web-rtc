{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/web-rtc-chat/WebRTCChat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef } from \"react\";\nimport { socketConnector } from \"../../socket/react-socket-connector/react-socket-connector\";\nimport { UserList } from \"../chat/components/user-list/UserList\";\nimport { LogoutButton } from \"../chat/components/logout-button/logout-button\";\nimport { SOCKET_ADDRESS, SOCKET_PREFIX } from \"../../evn\";\nimport { WebRTC } from \"../chat/WebRTC\";\nimport { useAuthentication } from \"../../authentication/hooks/useAuthentication\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst connectVideo = (videoRef, stream) => {\n  videoRef.current.srcObject = stream;\n};\n\nconst _WebRTCChat = ({\n  emitVideoOffer\n}) => {\n  _s();\n\n  const webRTC = useRef(new WebRTC({\n    iceServers: [{\n      urls: \"stun:stun.1.google.com:19302\"\n    }],\n    socket: {\n      url: SOCKET_ADDRESS,\n      options: {\n        path: `/${SOCKET_PREFIX}`\n      }\n    }\n  }));\n  const [{\n    username: currentUserName\n  }] = useAuthentication();\n  const ownStream = useRef();\n  const ownVideoRef = useRef();\n  const foreignVideoRef = useRef();\n  useEffect(() => {\n    webRTC.current.on(\"connect\", socket => {// TODO: associate socket.id with the logged in username\n      // socket.emit('')\n    });\n  }, []);\n  useLayoutEffect(() => {\n    webRTC.current.on(\"call\", async call => {\n      const stream = await openMediaDevices({\n        video: true,\n        audio: true\n      });\n      call.answer(stream);\n    });\n  }, []);\n\n  const onVideo = async name => {\n    const stream = await openMediaDevices({\n      video: true,\n      audio: true\n    });\n    const call = webRTC.current.call(name, stream);\n    call.on(\"stream\", ({\n      stream\n    }) => {// handle foreign stream\n    });\n  };\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"ownVideo\",\n            ref: ownVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"remote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"foreignVideo\",\n            ref: foreignVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(_WebRTCChat, \"Li8UOIJvvpSs99JZ+H0t/5c9oK8=\", false, function () {\n  return [useAuthentication];\n});\n\nconst WebRTCChat = socketConnector(dispatch => {\n  return {\n    emitVideoOffer: (offer, from, to) => dispatch({\n      type: \"video:offer\",\n      offer,\n      from,\n      to\n    })\n  };\n})(_WebRTCChat);\nexport { WebRTCChat };","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/web-rtc-chat/WebRTCChat.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","socketConnector","UserList","LogoutButton","SOCKET_ADDRESS","SOCKET_PREFIX","WebRTC","useAuthentication","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","connectVideo","videoRef","stream","current","srcObject","_WebRTCChat","emitVideoOffer","webRTC","iceServers","urls","socket","url","options","path","username","currentUserName","ownStream","ownVideoRef","foreignVideoRef","on","call","video","audio","answer","onVideo","name","onAudio","height","width","WebRTCChat","dispatch","offer","from","to","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { socketConnector } from \"../../socket/react-socket-connector/react-socket-connector\";\nimport { UserList } from \"../chat/components/user-list/UserList\";\nimport { LogoutButton } from \"../chat/components/logout-button/logout-button\";\nimport { SOCKET_ADDRESS, SOCKET_PREFIX } from \"../../evn\";\nimport { WebRTC } from \"../chat/WebRTC\";\nimport { useAuthentication } from \"../../authentication/hooks/useAuthentication\";\nimport SocketIO from \"socket.io\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst connectVideo = (videoRef: any, stream: any) => {\n  videoRef.current.srcObject = stream;\n};\n\nconst _WebRTCChat = ({ emitVideoOffer }: any) => {\n  const webRTC = useRef(\n    new WebRTC({\n      iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n      socket: {\n        url: SOCKET_ADDRESS,\n        options: {\n          path: `/${SOCKET_PREFIX}`,\n        },\n      },\n    })\n  );\n  const [{ username: currentUserName }] = useAuthentication();\n  const ownStream = useRef<any>();\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n\n  useEffect(() => {\n    webRTC.current.on(\"connect\", (socket: SocketIO.Socket) => {\n      // TODO: associate socket.id with the logged in username\n      // socket.emit('')\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    webRTC.current.on(\"call\", async (call) => {\n      const stream = await openMediaDevices({\n        video: true,\n        audio: true,\n      });\n      call.answer(stream);\n    });\n  }, []);\n\n  const onVideo = async (name: string) => {\n    const stream = await openMediaDevices({\n      video: true,\n      audio: true,\n    });\n    const call = webRTC.current.call(name, stream);\n    call.on(\"stream\", ({ stream }) => {\n      // handle foreign stream\n    });\n  };\n\n  const onAudio = (name: string) => {};\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n      <div>\n        <div>\n          <div>local</div>\n          <div>\n            <video\n              id={\"ownVideo\"}\n              ref={ownVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>remote</div>\n          <div>\n            <video\n              id={\"foreignVideo\"}\n              ref={foreignVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst WebRTCChat = socketConnector((dispatch) => {\n  return {\n    emitVideoOffer: (offer: any, from: string, to: string) =>\n      dispatch({ type: \"video:offer\", offer, from, to }),\n  };\n})(_WebRTCChat);\nexport { WebRTCChat };\n"]},"metadata":{},"sourceType":"module"}