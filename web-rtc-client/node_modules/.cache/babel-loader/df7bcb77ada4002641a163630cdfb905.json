{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:stun.1.google.com:19302\"\n  }]\n};\n\nconst ChatPage = () => {\n  _s();\n\n  const [{\n    name: currentUserName\n  }] = useAuthentication();\n  const ownStream = useRef();\n  const ownVideoRef = useRef();\n  const foreignVideoRef = useRef();\n  const peerConnectionRef = useRef(new RTCPeerConnection(configuration));\n  useLayoutEffect(() => {\n    const call = async () => {\n      peerConnectionRef.current.ontrack = ({\n        streams\n      }) => {\n        console.log(\"adding stream: \", streams[0]);\n        foreignVideoRef.current.srcObkect = streams[0];\n      };\n\n      ownStream.current = await openMediaDevices({\n        video: true,\n        audio: true\n      });\n      ownVideoRef.current.srcObject = ownStream.current;\n\n      for (const track of ownStream.current.getTracks()) {\n        peerConnectionRef.current.addTrack(track, ownStream.current);\n      }\n\n      socket.on(\"onicecandidate\", ({\n        candidate\n      }) => {\n        console.log(\"got candidate: \", {\n          candidate\n        });\n        peerConnectionRef.current.addIceCandidate(candidate);\n      });\n      socket.on(\"video:answer\", async ({\n        answer,\n        to,\n        from\n      }) => {\n        console.log(\"got answer: \", {\n          answer,\n          to,\n          from\n        });\n        await peerConnectionRef.current.setRemoteDescription(answer);\n      });\n      socket.on(\"video:offer\", async ({\n        offer,\n        to,\n        from\n      }) => {\n        console.log(\"got offer: \", {\n          offer,\n          to,\n          from\n        });\n        await peerConnectionRef.current.setRemoteDescription(offer);\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n        console.log(\"sending answer: \", {\n          answer,\n          to: from,\n          from: to\n        });\n        socket.emit(\"video:answer\", {\n          answer,\n          to: from,\n          from: to\n        });\n      });\n    };\n\n    call();\n  }, []);\n\n  const onVideo = async name => {\n    const from = currentUserName;\n    const to = name;\n    const offer = await peerConnectionRef.current.createOffer();\n    await peerConnectionRef.current.setLocalDescription(offer);\n    console.log(\"sending offer: \", {\n      offer,\n      to,\n      from\n    });\n    socket.emit(\"video:offer\", {\n      offer,\n      from,\n      to\n    });\n\n    peerConnectionRef.current.onicecandidate = ({\n      candidate\n    }) => {\n      if (candidate) {\n        console.log(\"sending candidate: \", {\n          candidate\n        });\n        socket.emit(\"onicecandidate\", {\n          candidate,\n          to,\n          from\n        });\n      }\n    };\n  };\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"ownVideo\",\n            ref: ownVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"remote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"foreignVideo\",\n            ref: foreignVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"5XlpXy9ekwch7JwcJdyR4oja6mw=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = ChatPage;\nexport { ChatPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx"],"names":["React","useLayoutEffect","useRef","LogoutButton","UserList","useAuthentication","socket","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","configuration","iceServers","urls","ChatPage","name","currentUserName","ownStream","ownVideoRef","foreignVideoRef","peerConnectionRef","RTCPeerConnection","call","current","ontrack","streams","console","log","srcObkect","video","audio","srcObject","track","getTracks","addTrack","on","candidate","addIceCandidate","answer","to","from","setRemoteDescription","offer","createAnswer","setLocalDescription","emit","onVideo","createOffer","onicecandidate","onAudio","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n};\nconst ChatPage = () => {\n  const [{ name: currentUserName }] = useAuthentication();\n  const ownStream = useRef<any>();\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n  const peerConnectionRef = useRef<any>(new RTCPeerConnection(configuration));\n\n  useLayoutEffect(() => {\n    const call = async () => {\n      peerConnectionRef.current.ontrack = ({ streams }: any) => {\n        console.log(\"adding stream: \", streams[0]);\n        foreignVideoRef.current.srcObkect = streams[0];\n      };\n\n      ownStream.current = await openMediaDevices({\n        video: true,\n        audio: true,\n      });\n      ownVideoRef.current.srcObject = ownStream.current;\n\n      for (const track of ownStream.current.getTracks()) {\n        peerConnectionRef.current.addTrack(track, ownStream.current);\n      }\n\n      socket.on(\"onicecandidate\", ({ candidate }: any) => {\n        console.log(\"got candidate: \", { candidate });\n        peerConnectionRef.current.addIceCandidate(candidate);\n      });\n\n      socket.on(\"video:answer\", async ({ answer, to, from }: any) => {\n        console.log(\"got answer: \", { answer, to, from });\n        await peerConnectionRef.current.setRemoteDescription(answer);\n      });\n\n      socket.on(\"video:offer\", async ({ offer, to, from }: any) => {\n        console.log(\"got offer: \", { offer, to, from });\n        await peerConnectionRef.current.setRemoteDescription(offer);\n\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n\n        console.log(\"sending answer: \", { answer, to: from, from: to });\n        socket.emit(\"video:answer\", { answer, to: from, from: to });\n      });\n    };\n    call();\n  }, []);\n\n  const onVideo = async (name: string) => {\n    const from = currentUserName;\n    const to = name;\n    const offer = await peerConnectionRef.current.createOffer();\n    await peerConnectionRef.current.setLocalDescription(offer);\n\n    console.log(\"sending offer: \", { offer, to, from });\n    socket.emit(\"video:offer\", { offer, from, to });\n\n    peerConnectionRef.current.onicecandidate = ({ candidate }: any) => {\n      if (candidate) {\n        console.log(\"sending candidate: \", { candidate });\n        socket.emit(\"onicecandidate\", {\n          candidate,\n          to,\n          from,\n        });\n      }\n    };\n  };\n\n  const onAudio = (name: string) => {};\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n      <div>\n        <div>\n          <div>local</div>\n          <div>\n            <video\n              id={\"ownVideo\"}\n              ref={ownVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>remote</div>\n          <div>\n            <video\n              id={\"foreignVideo\"}\n              ref={foreignVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { ChatPage };\n"]},"metadata":{},"sourceType":"module"}