{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/Login.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst LoginPage = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: 'Name',\n          id: 'nameInput',\n          type: \"text\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = LoginPage;\nexport { LoginPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/Login.page.tsx"],"names":["React","useState","LoginPage","name","setName","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE;AAAO,UAAA,WAAW,EAAE,MAApB;AAA4B,UAAA,EAAE,EAAE,WAAhC;AAA6C,UAAA,IAAI,EAAC,MAAlD;AAAyD,UAAA,KAAK,EAAEE,IAAhE;AAAsE,UAAA,QAAQ,EAAGE,KAAD,IAAWD,OAAO,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAlG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;;GAAML,S;;KAAAA,S;AAiBN,SAAQA,SAAR","sourcesContent":["import React, {useState} from 'react';\n\nconst LoginPage = () => {\n  const [name, setName] = useState('')\n  return (\n    <div>\n      <h1>Login</h1>\n      <div>\n        <div>\n          <label htmlFor=\"nameInput\">Name</label>\n        </div>\n        <div>\n          <input placeholder={'Name'} id={'nameInput'} type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport {LoginPage};"]},"metadata":{},"sourceType":"module"}