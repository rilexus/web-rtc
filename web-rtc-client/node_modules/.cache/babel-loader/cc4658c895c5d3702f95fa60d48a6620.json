{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:stun.1.google.com:19302\"\n  }]\n};\n\nconst ChatPage = () => {\n  _s();\n\n  const [to, setTo] = useState(\"\");\n  const [{\n    name: currentUserName\n  }] = useAuthentication();\n  const ownStream = useRef();\n  const ownVideoRef = useRef();\n  const foreignVideoRef = useRef();\n  const peerConnectionRef = useRef(new RTCPeerConnection(configuration));\n\n  const emitCandidate = candidate => {\n    if (to && currentUserName && candidate) {\n      console.log(\"sending candidate: \", {\n        candidate\n      });\n      socket.emit(\"onicecandidate\", {\n        candidate,\n        to,\n        currentUserName\n      });\n    }\n  };\n\n  useEffect(() => {\n    const call = async () => {\n      if (to) {\n        const from = currentUserName;\n        const offer = await peerConnectionRef.current.createOffer();\n        await peerConnectionRef.current.setLocalDescription(offer);\n        console.log(\"sending offer: \", {\n          offer,\n          to,\n          from\n        });\n        socket.emit(\"video:offer\", {\n          offer,\n          from,\n          to\n        });\n      }\n\n      peerConnectionRef.current.onicecandidate = ({\n        candidate\n      }) => {\n        console.log(\"onicecandidate\");\n        emitCandidate(candidate);\n      };\n    };\n\n    call();\n  }, [to]);\n\n  const connectVideoRef = (videoRef, stream) => {\n    videoRef.current.srcObject = stream;\n  };\n\n  useLayoutEffect(() => {\n    const call = async () => {\n      ownStream.current = await openMediaDevices({\n        video: true,\n        audio: false\n      });\n      connectVideoRef(ownVideoRef, ownStream.current);\n\n      for (const track of ownStream.current.getTracks()) {\n        peerConnectionRef.current.addTrack(track, ownStream.current);\n      }\n\n      socket.on(\"onicecandidate\", ({\n        candidate\n      }) => {\n        console.log(\"got candidate: \", {\n          candidate\n        });\n        peerConnectionRef.current.addIceCandidate(candidate);\n      });\n      socket.on(\"video:answer\", async ({\n        answer,\n        to,\n        from\n      }) => {\n        console.log(\"got answer: \", {\n          answer,\n          to,\n          from\n        });\n        await peerConnectionRef.current.setRemoteDescription(answer);\n      });\n      socket.on(\"video:offer\", async ({\n        offer,\n        to,\n        from\n      }) => {\n        console.log(\"got offer: \", {\n          offer,\n          to,\n          from\n        });\n        await peerConnectionRef.current.setRemoteDescription(offer);\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n        console.log(\"sending answer: \", {\n          answer,\n          to: from,\n          from: to\n        });\n        socket.emit(\"video:answer\", {\n          answer,\n          to: from,\n          from: to\n        });\n      });\n\n      peerConnectionRef.current.ontrack = ({\n        streams\n      }) => {\n        console.log(\"adding stream: \", streams);\n        connectVideoRef(foreignVideoRef, streams[0]);\n      };\n    };\n\n    call();\n  }, []);\n\n  const onVideo = async name => {\n    setTo(name);\n  };\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"ownVideo\",\n            ref: ownVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"remote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"foreignVideo\",\n            ref: foreignVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"audkC0WNInHQumv4uRfA8+muvIk=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = ChatPage;\nexport { ChatPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","LogoutButton","UserList","useAuthentication","socket","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","configuration","iceServers","urls","ChatPage","to","setTo","name","currentUserName","ownStream","ownVideoRef","foreignVideoRef","peerConnectionRef","RTCPeerConnection","emitCandidate","candidate","console","log","emit","call","from","offer","current","createOffer","setLocalDescription","onicecandidate","connectVideoRef","videoRef","stream","srcObject","video","audio","track","getTracks","addTrack","on","addIceCandidate","answer","setRemoteDescription","createAnswer","ontrack","streams","onVideo","onAudio","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n};\nconst ChatPage = () => {\n  const [to, setTo] = useState(\"\");\n  const [{ name: currentUserName }] = useAuthentication();\n  const ownStream = useRef<any>();\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n  const peerConnectionRef = useRef<any>(new RTCPeerConnection(configuration));\n\n  const emitCandidate = (candidate: any) => {\n    if (to && currentUserName && candidate) {\n      console.log(\"sending candidate: \", { candidate });\n      socket.emit(\"onicecandidate\", { candidate, to, currentUserName });\n    }\n  };\n\n  useEffect(() => {\n    const call = async () => {\n      if (to) {\n        const from = currentUserName;\n        const offer = await peerConnectionRef.current.createOffer();\n        await peerConnectionRef.current.setLocalDescription(offer);\n\n        console.log(\"sending offer: \", { offer, to, from });\n        socket.emit(\"video:offer\", { offer, from, to });\n      }\n      peerConnectionRef.current.onicecandidate = ({ candidate }: any) => {\n        console.log(\"onicecandidate\");\n        emitCandidate(candidate);\n      };\n    };\n    call();\n  }, [to]);\n\n  const connectVideoRef = (videoRef: any, stream: any) => {\n    videoRef.current.srcObject = stream;\n  };\n\n  useLayoutEffect(() => {\n    const call = async () => {\n      ownStream.current = await openMediaDevices({\n        video: true,\n        audio: false,\n      });\n\n      connectVideoRef(ownVideoRef, ownStream.current);\n\n      for (const track of ownStream.current.getTracks()) {\n        peerConnectionRef.current.addTrack(track, ownStream.current);\n      }\n\n      socket.on(\"onicecandidate\", ({ candidate }: any) => {\n        console.log(\"got candidate: \", { candidate });\n        peerConnectionRef.current.addIceCandidate(candidate);\n      });\n\n      socket.on(\"video:answer\", async ({ answer, to, from }: any) => {\n        console.log(\"got answer: \", { answer, to, from });\n        await peerConnectionRef.current.setRemoteDescription(answer);\n      });\n\n      socket.on(\"video:offer\", async ({ offer, to, from }: any) => {\n        console.log(\"got offer: \", { offer, to, from });\n        await peerConnectionRef.current.setRemoteDescription(offer);\n\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n\n        console.log(\"sending answer: \", { answer, to: from, from: to });\n        socket.emit(\"video:answer\", { answer, to: from, from: to });\n      });\n\n      peerConnectionRef.current.ontrack = ({ streams }: any) => {\n        console.log(\"adding stream: \", streams);\n        connectVideoRef(foreignVideoRef, streams[0]);\n      };\n    };\n    call();\n  }, []);\n\n  const onVideo = async (name: string) => {\n    setTo(name);\n  };\n\n  const onAudio = (name: string) => {};\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n      <div>\n        <div>\n          <div>local</div>\n          <div>\n            <video\n              id={\"ownVideo\"}\n              ref={ownVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>remote</div>\n          <div>\n            <video\n              id={\"foreignVideo\"}\n              ref={foreignVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { ChatPage };\n"]},"metadata":{},"sourceType":"module"}