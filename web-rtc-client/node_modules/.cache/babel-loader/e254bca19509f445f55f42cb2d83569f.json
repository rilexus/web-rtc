{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/context/authentication/Authentication.context.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createContext } from \"react\";\nimport { useLocalStorage } from \"../../hooks/use-local-storage/useLocalStorage\";\nconst AuthValueContext = /*#__PURE__*/createContext({});\nconst AuthDispatchContext = /*#__PURE__*/createContext(_c = function noop() {});\n_c2 = AuthDispatchContext;\nconst ValueProvider = AuthValueContext.Provider;\nValueProvider.displayName = 'ValueProvider';\nconst DispatchProvider = AuthDispatchContext.Provider;\nDispatchProvider.displayName = 'DispatchProvider';\n\nconst AuthenticationProvider = ({\n  children\n}) => {\n  _s();\n\n  const [{\n    login: isLoggedIn\n  }, setValue] = useLocalStorage('login', {\n    login: false\n  });\n\n  const isAuthenticated = () => {\n    return false;\n  };\n\n  const login = (name, password) => {};\n\n  const dispatch = action => {};\n\n  return /*#__PURE__*/_jsxDEV(ValueProvider, {\n    value: {\n      isLoggedIn\n    },\n    children: /*#__PURE__*/_jsxDEV(DispatchProvider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthenticationProvider, \"xJ8Tfz1zCtGaFnM5AHQYuQ0TGJ8=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c3 = AuthenticationProvider;\nexport { AuthenticationProvider };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AuthDispatchContext$createContext\");\n$RefreshReg$(_c2, \"AuthDispatchContext\");\n$RefreshReg$(_c3, \"AuthenticationProvider\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/context/authentication/Authentication.context.tsx"],"names":["React","createContext","useLocalStorage","AuthValueContext","AuthDispatchContext","noop","ValueProvider","Provider","displayName","DispatchProvider","AuthenticationProvider","children","login","isLoggedIn","setValue","isAuthenticated","name","password","dispatch","action"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,OAA5B;AACA,SAAQC,eAAR,QAA8B,+CAA9B;AAEA,MAAMC,gBAAgB,gBAAGF,aAAa,CAAC,EAAD,CAAtC;AAIA,MAAMG,mBAAmB,gBAAGH,aAAa,MAAC,SAASI,IAAT,GAAe,CAAE,CAAlB,CAAzC;MAAMD,mB;AAEN,MAAME,aAAkB,GAAGH,gBAAgB,CAACI,QAA5C;AACAD,aAAa,CAACE,WAAd,GAA4B,eAA5B;AAEA,MAAMC,gBAAqB,GAAGL,mBAAmB,CAACG,QAAlD;AACAE,gBAAgB,CAACD,WAAjB,GAA+B,kBAA/B;;AAEA,MAAME,sBAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAClD,QAAM,CAAC;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAD,EAAuBC,QAAvB,IAAmCZ,eAAe,CAAmB,OAAnB,EAA4B;AAAEU,IAAAA,KAAK,EAAE;AAAT,GAA5B,CAAxD;;AAEA,QAAMG,eAAe,GAAG,MAAe;AACrC,WAAO,KAAP;AACD,GAFD;;AAIA,QAAMH,KAAK,GAAG,CAACI,IAAD,EAAcC,QAAd,KAAmC,CAEhD,CAFD;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAgD,CAEhE,CAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEN,MAAAA;AAAF,KAAtB;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEK,QAAzB;AAAA,gBACGP;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtBD;;GAAMD,sB;UACqCR,e;;;MADrCQ,sB;AAwBN,SAASA,sBAAT","sourcesContent":["import React from 'react';\nimport {createContext} from \"react\";\nimport {useLocalStorage} from \"../../hooks/use-local-storage/useLocalStorage\";\n\nconst AuthValueContext = createContext({\n\n})\n\nconst AuthDispatchContext = createContext(function noop(){})\n\nconst ValueProvider: any = AuthValueContext.Provider\nValueProvider.displayName = 'ValueProvider'\n\nconst DispatchProvider: any = AuthDispatchContext.Provider\nDispatchProvider.displayName = 'DispatchProvider'\n\nconst AuthenticationProvider = ({children}: any) => {\n  const [{ login: isLoggedIn },setValue] = useLocalStorage<{login: boolean}>('login', { login: false })\n\n  const isAuthenticated = (): boolean => {\n    return false\n  }\n\n  const login = (name:string, password: string) => {\n\n  }\n\n  const dispatch = (action: {type: string, [key: string]: any}) => {\n\n  }\n\n  return (\n    <ValueProvider value={{ isLoggedIn }}>\n      <DispatchProvider value={dispatch}>\n        {children}\n      </DispatchProvider>\n    </ValueProvider>\n  );\n};\n\nexport { AuthenticationProvider };\n\n\n"]},"metadata":{},"sourceType":"module"}