{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n}; // const stream = await navigator.mediaDevices.getUserMedia({\n//   video: true,\n//   audio: true,\n// });\n// yourVideo.srcObject = stream;\n// const configuration = {\n//   iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n// };\n// const yours = new RTCPeerConnection(configuration);\n// const theirs = new RTCPeerConnection(configuration);\n// for (const track of stream.getTracks()) {\n//   yours.addTrack(track, stream);\n// }\n// theirs.ontrack = (e) => (theirVideo.srcObject = e.streams[0]);\n// yours.onicecandidate = (e) => theirs.addIceCandidate(e.candidate);\n// theirs.onicecandidate = (e) => yours.addIceCandidate(e.candidate);\n// const offer = await yours.createOffer();\n// await yours.setLocalDescription(offer);\n// await theirs.setRemoteDescription(offer);\n// const answer = await theirs.createAnswer();\n// await theirs.setLocalDescription(answer);\n// await yours.setRemoteDescription(answer);\n\n\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:stun.1.google.com:19302\"\n  }]\n};\n\nconst ChatPage = () => {\n  _s();\n\n  const [to, setTo] = useState(\"\");\n  const [{\n    name: currentUserName\n  }] = useAuthentication();\n  const ownStream = useRef();\n  const ownVideoRef = useRef();\n  const foreignVideoRef = useRef();\n  const peerConnectionRef = useRef(new RTCPeerConnection(configuration));\n  useEffect(() => {\n    const call = async () => {\n      if (to) {\n        const from = currentUserName;\n        const offer = await peerConnectionRef.current.createOffer();\n        await peerConnectionRef.current.setLocalDescription(offer);\n        console.log(\"sending offer: \", {\n          offer,\n          to,\n          from\n        });\n        socket.emit(\"video:offer\", {\n          offer,\n          from,\n          to\n        });\n\n        peerConnectionRef.current.onicecandidate = ({\n          candidate\n        }) => {\n          console.log({\n            candidate\n          });\n          socket.emit(\"onicecandidate\", {\n            candidate,\n            to,\n            from\n          });\n        };\n      }\n    };\n\n    call();\n  }, [to]);\n  useLayoutEffect(() => {\n    const call = async () => {\n      ownStream.current = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      });\n      ownVideoRef.current.srcObject = ownStream.current;\n\n      for (const track of ownStream.current.getTracks()) {\n        peerConnectionRef.current.addTrack(track, ownStream.current);\n      }\n\n      socket.on(\"onicecandidate\", ({\n        candidate\n      }) => {\n        console.log(\"got candidate: \", {\n          candidate\n        });\n        peerConnectionRef.current.addIceCandidate(candidate);\n      });\n      socket.on(\"video:answer\", async ({\n        answer,\n        to,\n        from\n      }) => {\n        console.log(\"got answer: \", {\n          answer,\n          to,\n          from\n        });\n        await peerConnectionRef.current.setRemoteDescription(answer);\n      });\n      socket.on(\"video:offer\", async ({\n        offer,\n        to,\n        from\n      }) => {\n        console.log(\"got offer: \", {\n          offer,\n          to,\n          from\n        });\n        await peerConnectionRef.current.setRemoteDescription(offer);\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n        console.log(\"sending answer: \", {\n          answer,\n          to: from,\n          from: to\n        });\n        socket.emit(\"video:answer\", {\n          answer,\n          to: from,\n          from: to\n        });\n      });\n\n      peerConnectionRef.current.ontrack = ({\n        streams\n      }) => {\n        console.log(\"adding stream: \", streams[0]);\n        foreignVideoRef.current.srcObject = streams[0];\n      };\n    };\n\n    call();\n  }, []);\n\n  const onVideo = async name => {\n    setTo(name);\n  };\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"ownVideo\",\n            ref: ownVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"remote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"foreignVideo\",\n            ref: foreignVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"audkC0WNInHQumv4uRfA8+muvIk=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = ChatPage;\nexport { ChatPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","LogoutButton","UserList","useAuthentication","socket","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","configuration","iceServers","urls","ChatPage","to","setTo","name","currentUserName","ownStream","ownVideoRef","foreignVideoRef","peerConnectionRef","RTCPeerConnection","call","from","offer","current","createOffer","setLocalDescription","console","log","emit","onicecandidate","candidate","video","audio","srcObject","track","getTracks","addTrack","on","addIceCandidate","answer","setRemoteDescription","createAnswer","ontrack","streams","onVideo","onAudio","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\n// const stream = await navigator.mediaDevices.getUserMedia({\n//   video: true,\n//   audio: true,\n// });\n// yourVideo.srcObject = stream;\n\n// const configuration = {\n//   iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n// };\n// const yours = new RTCPeerConnection(configuration);\n// const theirs = new RTCPeerConnection(configuration);\n\n// for (const track of stream.getTracks()) {\n//   yours.addTrack(track, stream);\n// }\n// theirs.ontrack = (e) => (theirVideo.srcObject = e.streams[0]);\n\n// yours.onicecandidate = (e) => theirs.addIceCandidate(e.candidate);\n\n// theirs.onicecandidate = (e) => yours.addIceCandidate(e.candidate);\n\n// const offer = await yours.createOffer();\n// await yours.setLocalDescription(offer);\n// await theirs.setRemoteDescription(offer);\n\n// const answer = await theirs.createAnswer();\n// await theirs.setLocalDescription(answer);\n// await yours.setRemoteDescription(answer);\n\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n};\nconst ChatPage = () => {\n  const [to, setTo] = useState(\"\");\n  const [{ name: currentUserName }] = useAuthentication();\n  const ownStream = useRef<any>();\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n  const peerConnectionRef = useRef<any>(new RTCPeerConnection(configuration));\n\n  useEffect(() => {\n    const call = async () => {\n      if (to) {\n        const from = currentUserName;\n        const offer = await peerConnectionRef.current.createOffer();\n        await peerConnectionRef.current.setLocalDescription(offer);\n\n        console.log(\"sending offer: \", { offer, to, from });\n        socket.emit(\"video:offer\", { offer, from, to });\n\n        peerConnectionRef.current.onicecandidate = ({ candidate }: any) => {\n          console.log({ candidate });\n          socket.emit(\"onicecandidate\", { candidate, to, from });\n        };\n      }\n    };\n    call();\n  }, [to]);\n\n  useLayoutEffect(() => {\n    const call = async () => {\n      ownStream.current = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false,\n      });\n      ownVideoRef.current.srcObject = ownStream.current;\n\n      for (const track of ownStream.current.getTracks()) {\n        peerConnectionRef.current.addTrack(track, ownStream.current);\n      }\n\n      socket.on(\"onicecandidate\", ({ candidate }: any) => {\n        console.log(\"got candidate: \", { candidate });\n        peerConnectionRef.current.addIceCandidate(candidate);\n      });\n\n      socket.on(\"video:answer\", async ({ answer, to, from }: any) => {\n        console.log(\"got answer: \", { answer, to, from });\n        await peerConnectionRef.current.setRemoteDescription(answer);\n      });\n\n      socket.on(\"video:offer\", async ({ offer, to, from }: any) => {\n        console.log(\"got offer: \", { offer, to, from });\n        await peerConnectionRef.current.setRemoteDescription(offer);\n\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n\n        console.log(\"sending answer: \", { answer, to: from, from: to });\n        socket.emit(\"video:answer\", { answer, to: from, from: to });\n      });\n\n      peerConnectionRef.current.ontrack = ({ streams }: any) => {\n        console.log(\"adding stream: \", streams[0]);\n        foreignVideoRef.current.srcObject = streams[0];\n      };\n    };\n    call();\n  }, []);\n\n  const onVideo = async (name: string) => {\n    setTo(name);\n  };\n\n  const onAudio = (name: string) => {};\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n      <div>\n        <div>\n          <div>local</div>\n          <div>\n            <video\n              id={\"ownVideo\"}\n              ref={ownVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>remote</div>\n          <div>\n            <video\n              id={\"foreignVideo\"}\n              ref={foreignVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { ChatPage };\n"]},"metadata":{},"sourceType":"module"}