{"ast":null,"code":"import { AuthenticationService } from \"./Authentication.service\";\nimport { HttpService } from \"./Http.service\";\nimport { API_PREFIX, IS_IN_DEVELOPMENT, SERVER_ADDRESS } from \"../evn\";\n\nclass Api {\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  async login(name, password) {\n    return this.authService.login(name, password);\n  }\n\n}\n\nconst DEVELOPMENT_ADDRESS = `http://localhost:3000/${API_PREFIX}`;\nconst PROD_ADDRESS = `${SERVER_ADDRESS}/${API_PREFIX}`;\nconst http = new HttpService({\n  path: `${IS_IN_DEVELOPMENT ? DEVELOPMENT_ADDRESS : PROD_ADDRESS}`\n});\nconst authService = new AuthenticationService(http);\nconst api = new Api(authService);\nexport { api };","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/api/Api.ts"],"names":["AuthenticationService","HttpService","API_PREFIX","IS_IN_DEVELOPMENT","SERVER_ADDRESS","Api","constructor","authService","login","name","password","DEVELOPMENT_ADDRESS","PROD_ADDRESS","http","path","api"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,0BAAtC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,cAAxC,QAA8D,QAA9D;;AAEA,MAAMC,GAAN,CAAU;AACRC,EAAAA,WAAW,CAASC,WAAT,EAA6C;AAAA,SAApCA,WAAoC,GAApCA,WAAoC;AAAE;;AAE1D,QAAMC,KAAN,CAAYC,IAAZ,EAA0BC,QAA1B,EAA4C;AAC1C,WAAO,KAAKH,WAAL,CAAiBC,KAAjB,CAAuBC,IAAvB,EAA6BC,QAA7B,CAAP;AACD;;AALO;;AAOV,MAAMC,mBAAmB,GAAI,yBAAwBT,UAAW,EAAhE;AACA,MAAMU,YAAY,GAAI,GAAER,cAAe,IAAGF,UAAW,EAArD;AAEA,MAAMW,IAAI,GAAG,IAAIZ,WAAJ,CAAgB;AAC3Ba,EAAAA,IAAI,EAAG,GAAEX,iBAAiB,GAAGQ,mBAAH,GAAyBC,YAAa;AADrC,CAAhB,CAAb;AAGA,MAAML,WAAW,GAAG,IAAIP,qBAAJ,CAA0Ba,IAA1B,CAApB;AAEA,MAAME,GAAG,GAAG,IAAIV,GAAJ,CAAQE,WAAR,CAAZ;AACA,SAASQ,GAAT","sourcesContent":["import { AuthenticationService } from \"./Authentication.service\";\nimport { HttpService } from \"./Http.service\";\nimport { API_PREFIX, IS_IN_DEVELOPMENT, SERVER_ADDRESS } from \"../evn\";\n\nclass Api {\n  constructor(private authService: AuthenticationService) {}\n\n  async login(name: string, password: string) {\n    return this.authService.login(name, password);\n  }\n}\nconst DEVELOPMENT_ADDRESS = `http://localhost:3000/${API_PREFIX}`;\nconst PROD_ADDRESS = `${SERVER_ADDRESS}/${API_PREFIX}`;\n\nconst http = new HttpService({\n  path: `${IS_IN_DEVELOPMENT ? DEVELOPMENT_ADDRESS : PROD_ADDRESS}`,\n});\nconst authService = new AuthenticationService(http);\n\nconst api = new Api(authService);\nexport { api };\n"]},"metadata":{},"sourceType":"module"}