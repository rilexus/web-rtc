{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { socketConnector } from \"./socket/react-socket-connector/react-socket-connector\";\nimport { useSubscription } from \"./socket/use-subscription/useSubscription\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { LoginPage } from \"./pages/login/Login.page\";\nimport { ChatPage } from \"./pages/chat/Chat.page\";\nimport { useAuthentication } from \"./context/authentication/Authentication.context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n}; // async function getConnectedDevices(type) {\n//   const devices = await navigator.mediaDevices.enumerateDevices();\n//   console.log(devices)\n//   return devices.filter(device => device.kind === type)\n// }\n//\n// const videoCameras = getConnectedDevices('videoinput');\n// videoCameras.then(v => {\n//   console.log('Video: ', v)\n// })\n//\n// const microphones = getConnectedDevices('audioinput');\n// microphones.then(v => {\n//   console.log('Mic: ', v)\n// })\n\n\nclass SignalingChannel {\n  constructor() {\n    this.id = null;\n    this.subscribers = {// event:[callbacks]\n    };\n  }\n\n  register(id) {\n    this.id = id;\n    fetch('/init', {\n      mode: 'no-cors',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(res => res.json()).then(res => {\n      console.log('register: ', res);\n    });\n  }\n\n  addEventListener(event, callback) {\n    if (!this.subscribers[event]) {\n      this.subscribers[event] = [callback];\n      return;\n    }\n\n    this.subscribers[event].push(callback);\n  }\n\n  removeEventListener(event, listener) {\n    if (!this.subscribers[event]) {\n      return;\n    }\n\n    this.subscribers[event] = this.subscribers[event].filter(l => l !== listener);\n  }\n\n  send(event) {\n    if (!this.subscribers[event.type]) {\n      // no subscriber for event.type found\n      return;\n    }\n\n    this.subscribers[event.type].forEach(subscriber => {\n      // call all subscribers for event.type\n      if (typeof subscriber === \"function\") {\n        subscriber(event.payload);\n      }\n    });\n  }\n\n}\n\nconst signalingChannel = new SignalingChannel();\nsignalingChannel.addEventListener('message', message => {// New message from remote client received\n});\n\nasync function makeCall() {\n  const configuration = {\n    iceServers: [{\n      urls: \"stun:192.168.2.120:3478\",\n      username: \"username\",\n      credential: \"password\"\n    }]\n  };\n  const peerConnection = new RTCPeerConnection(configuration);\n  signalingChannel.addEventListener('answer', async message => {\n    if (message.payload.answer) {\n      const remoteDesc = new RTCSessionDescription(message.payload.answer);\n      await peerConnection.setRemoteDescription(remoteDesc);\n    }\n  });\n  const offer = await peerConnection.createOffer();\n  console.log(offer);\n  await peerConnection.setLocalDescription(offer);\n  signalingChannel.send({\n    type: 'offer',\n    payload: {\n      offer\n    }\n  });\n}\n\nfunction App(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [confirmed, setConfirmed] = useState(false);\n  const [{\n    isLoggedIn\n  }, dispatch] = useAuthentication();\n  const a = useHistory();\n  useEffect(() => {\n    if (isLoggedIn) {}\n  }, []);\n  useSubscription('events', d => {\n    console.log(d);\n  });\n  const ownVideoRef = useRef();\n  useLayoutEffect(() => {\n    const connect = async () => {\n      try {// const constraints = {'video': true, 'audio': true};\n        // const stream = await openMediaDevices(constraints);\n        //\n        // ownVideoRef.current.srcObject = stream;\n      } catch (e) {\n        console.error(e);\n      }\n    }; // connect()\n\n  }, []);\n  useEffect(() => {\n    if (confirmed) {\n      signalingChannel.register(name);\n    }\n  }, [confirmed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [confirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          id: 'video',\n          ref: ownVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          controls: false,\n          style: {\n            height: \"300px\",\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => makeCall().then(res => {\n            console.log(res);\n          }),\n          children: \"CALL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"ANSWER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), !confirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.sendEvents(),\n        children: \"click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: '/login',\n          children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/chat',\n          children: /*#__PURE__*/_jsxDEV(ChatPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"no0uGH13ibcjItLSP6YwYaJE7Fg=\", false, function () {\n  return [useAuthentication, useHistory, useSubscription];\n});\n\n_c = App;\nconst AppWithSocket = socketConnector(dispatch => ({\n  sendEvents: () => {\n    dispatch({\n      type: 'events',\n      payload: {\n        data: 'fromApp'\n      }\n    });\n  }\n}))(App);\nexport default AppWithSocket;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/App.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","socketConnector","useSubscription","Switch","Route","LoginPage","ChatPage","useAuthentication","useHistory","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","SignalingChannel","id","subscribers","register","fetch","mode","method","headers","body","JSON","stringify","then","res","json","console","log","addEventListener","event","callback","push","removeEventListener","listener","filter","l","send","type","forEach","subscriber","payload","signalingChannel","message","makeCall","configuration","iceServers","urls","username","credential","peerConnection","RTCPeerConnection","answer","remoteDesc","RTCSessionDescription","setRemoteDescription","offer","createOffer","setLocalDescription","App","props","name","setName","confirmed","setConfirmed","isLoggedIn","dispatch","a","d","ownVideoRef","connect","e","error","height","width","sendEvents","AppWithSocket","data"],"mappings":"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","sourcesContent":["import React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react'\nimport './App.css';\nimport {socketConnector} from \"./socket/react-socket-connector/react-socket-connector\";\nimport {useSubscription} from \"./socket/use-subscription/useSubscription\";\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {LoginPage} from \"./pages/login/Login.page\";\nimport {ChatPage} from \"./pages/chat/Chat.page\";\nimport {useAuthentication} from \"./context/authentication/Authentication.context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n}\n\n// async function getConnectedDevices(type) {\n//   const devices = await navigator.mediaDevices.enumerateDevices();\n//   console.log(devices)\n//   return devices.filter(device => device.kind === type)\n// }\n//\n// const videoCameras = getConnectedDevices('videoinput');\n// videoCameras.then(v => {\n//   console.log('Video: ', v)\n// })\n//\n// const microphones = getConnectedDevices('audioinput');\n// microphones.then(v => {\n//   console.log('Mic: ', v)\n// })\n\nclass SignalingChannel {\n  id: string | null = null\n  subscribers:{\n    [key: string]: any\n  }  = {\n    // event:[callbacks]\n  }\n\n  register(id: string){\n    this.id = id\n    fetch('/init',{\n      mode: 'no-cors',\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: id })\n    })\n      .then(res => res.json())\n      .then(res=> {\n        console.log('register: ', res)\n    })\n  }\n\n  addEventListener(event: any, callback: any){\n    if (!this.subscribers[event]){\n      this.subscribers[event] = [callback]\n      return\n    }\n    this.subscribers[event].push(callback)\n  }\n\n  removeEventListener(event: any, listener:any){\n    if (!this.subscribers[event]){\n      return\n    }\n    this.subscribers[event] = this.subscribers[event].filter((l:any) => l !== listener)\n  }\n\n  send(event: any){\n    if (!this.subscribers[event.type]){\n      // no subscriber for event.type found\n      return\n    }\n    this.subscribers[event.type].forEach((subscriber: any) => {\n      // call all subscribers for event.type\n      if (typeof subscriber === \"function\"){\n        subscriber(event.payload)\n      }\n    })\n  }\n}\nconst signalingChannel = new SignalingChannel();\nsignalingChannel.addEventListener('message', (message:any) => {\n  // New message from remote client received\n});\n\nasync function makeCall(): Promise<any> {\n  const configuration = {\n    iceServers: [\n      {\n        urls: \"stun:192.168.2.120:3478\",\n        username: \"username\",\n        credential: \"password\"\n      }\n    ]\n  }\n  const peerConnection = new RTCPeerConnection(configuration);\n  signalingChannel.addEventListener('answer', async (message: any) => {\n    if (message.payload.answer) {\n      const remoteDesc = new RTCSessionDescription(message.payload.answer);\n      await peerConnection.setRemoteDescription(remoteDesc);\n    }\n  });\n  const offer = await peerConnection.createOffer();\n  console.log(offer)\n  await peerConnection.setLocalDescription(offer);\n  signalingChannel.send({type: 'offer', payload: { offer }});\n}\n\n\nfunction App(props: any) {\n  const [name, setName] = useState('')\n  const [confirmed, setConfirmed] = useState(false)\n  const [{isLoggedIn}, dispatch] = useAuthentication()\n  const a = useHistory()\n  useEffect(() => {\n    if (isLoggedIn){\n\n    }\n  },[])\n\n  useSubscription('events', (d) => {\n    console.log(d)\n  })\n\n  const ownVideoRef = useRef<any>()\n  useLayoutEffect(() => {\n    const connect = async () => {\n      try {\n        // const constraints = {'video': true, 'audio': true};\n        // const stream = await openMediaDevices(constraints);\n        //\n        // ownVideoRef.current.srcObject = stream;\n      } catch (e){\n        console.error(e)\n      }\n    }\n    // connect()\n  }, [])\n\n  useEffect(() => {\n    if (confirmed){\n      signalingChannel.register(name)\n    }\n  }, [confirmed])\n\n  return (\n    <div className=\"App\">\n      {\n      confirmed && (\n        <div>\n          <div>\n            <video id={'video'} ref={ownVideoRef} autoPlay playsInline controls={false} style={{\n              height: \"300px\",\n              width: '300px'\n            }}/>\n          </div>\n          <div>\n            <button onClick={() => makeCall().then(res => {\n              console.log(res)\n            })}>CALL</button>\n          </div>\n          <div>\n            <button>ANSWER</button>\n          </div>\n        </div>\n      )\n    }\n    {!confirmed && (\n      <div>\n        {/*<NameInput value={name} onChange={(e) => setName(e.target.value) } onConfirm={()=> setConfirmed(true) }/>*/}\n        <button onClick={() => props.sendEvents()}>click</button>\n      </div>\n    )}\n    <div>\n      <Switch>\n        <Route path={'/login'}>\n          <LoginPage/>\n        </Route>\n        <Route path={'/chat'}>\n          <ChatPage/>\n        </Route>\n      </Switch>\n    </div>\n    </div>\n  );\n}\n\nconst AppWithSocket = socketConnector((dispatch: any)=>({\n  sendEvents: () => {\n    dispatch({type: 'events', payload: {data: 'fromApp'}})\n  }\n}))(App)\n\nexport default AppWithSocket;\n"]},"metadata":{},"sourceType":"module"}