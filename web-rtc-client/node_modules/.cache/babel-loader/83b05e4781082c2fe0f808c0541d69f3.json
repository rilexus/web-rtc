{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useSubscription } from \"../../socket/use-subscription/useSubscription\";\nimport { socket } from \"../../socket/socket\";\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:192.168.2.120:3478\",\n    username: \"username\",\n    credential: \"password\"\n  }]\n};\nconst peerConnection = new RTCPeerConnection(configuration);\n\nconst ChatPage = () => {\n  _s();\n\n  useSubscription(\"video:answer\", async ({\n    answer\n  }) => {\n    const remoteDesc = new RTCSessionDescription(answer);\n    await peerConnection.setRemoteDescription(remoteDesc);\n  });\n\n  const onVideo = async name => {\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    socket.emit(\"video:offer\", {\n      offer,\n      to: name\n    });\n  };\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"wpUHqjcXqLAwY/8SnoVwGjhIUKk=\", false, function () {\n  return [useSubscription];\n});\n\n_c = ChatPage;\nexport { ChatPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx"],"names":["React","LogoutButton","UserList","useSubscription","socket","configuration","iceServers","urls","username","credential","peerConnection","RTCPeerConnection","ChatPage","answer","remoteDesc","RTCSessionDescription","setRemoteDescription","onVideo","name","offer","createOffer","setLocalDescription","emit","to","onAudio"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0CAA7B;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,eAAT,QAAgC,+CAAhC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,IAAI,EAAE,yBADR;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,UAAU,EAAE;AAHd,GADU;AADQ,CAAtB;AASA,MAAMC,cAAc,GAAG,IAAIC,iBAAJ,CAAsBN,aAAtB,CAAvB;;AAEA,MAAMO,QAAQ,GAAG,MAAM;AAAA;;AACrBT,EAAAA,eAAe,CAAC,cAAD,EAAiB,OAAO;AAAEU,IAAAA;AAAF,GAAP,KAAsB;AACpD,UAAMC,UAAU,GAAG,IAAIC,qBAAJ,CAA0BF,MAA1B,CAAnB;AACA,UAAMH,cAAc,CAACM,oBAAf,CAAoCF,UAApC,CAAN;AACD,GAHc,CAAf;;AAKA,QAAMG,OAAO,GAAG,MAAOC,IAAP,IAAwB;AACtC,UAAMC,KAAK,GAAG,MAAMT,cAAc,CAACU,WAAf,EAApB;AACA,UAAMV,cAAc,CAACW,mBAAf,CAAmCF,KAAnC,CAAN;AACAf,IAAAA,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2B;AAAEH,MAAAA,KAAF;AAASI,MAAAA,EAAE,EAAEL;AAAb,KAA3B;AACD,GAJD;;AAMA,QAAMM,OAAO,GAAIN,IAAD,IAAkB,CAAE,CAApC;;AACA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEM,OAAnB;AAA4B,MAAA,OAAO,EAAEP;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnBD;;GAAML,Q;UACJT,e;;;KADIS,Q;AAqBN,SAASA,QAAT","sourcesContent":["import React from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useSubscription } from \"../../socket/use-subscription/useSubscription\";\nimport { socket } from \"../../socket/socket\";\n\nconst configuration = {\n  iceServers: [\n    {\n      urls: \"stun:192.168.2.120:3478\",\n      username: \"username\",\n      credential: \"password\",\n    },\n  ],\n};\nconst peerConnection = new RTCPeerConnection(configuration);\n\nconst ChatPage = () => {\n  useSubscription(\"video:answer\", async ({ answer }) => {\n    const remoteDesc = new RTCSessionDescription(answer);\n    await peerConnection.setRemoteDescription(remoteDesc);\n  });\n\n  const onVideo = async (name: string) => {\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    socket.emit(\"video:offer\", { offer, to: name });\n  };\n\n  const onAudio = (name: string) => {};\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n    </div>\n  );\n};\n\nexport { ChatPage };\n"]},"metadata":{},"sourceType":"module"}