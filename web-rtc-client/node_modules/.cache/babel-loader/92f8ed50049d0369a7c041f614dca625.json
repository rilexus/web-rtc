{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/web-rtc-chat/WebRTCChat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socketConnector } from \"../../socket/react-socket-connector/react-socket-connector\";\nimport { WebRTC } from \"../chat/WebRTC\";\nimport { UserList } from \"../chat/components/user-list/UserList\";\nimport { LogoutButton } from \"../chat/components/logout-button/logout-button\";\nimport { SOCKET_ADDRESS } from \"../../evn\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst connectVideo = (videoRef, stream) => {\n  videoRef.current.srcObject = stream;\n};\n\nconst webRTC = new WebRTC({\n  iceServers: [{\n    urls: \"stun:stun.1.google.com:19302\"\n  }],\n  socket: {\n    url: SOCKET_ADDRESS,\n    options: {\n      path: \"/socket\"\n    }\n  }\n});\nwebRTC.on(\"connect\", () => {\n  console.log(\"connected\");\n});\n\nconst _WebRTCChat = ({\n  emitVideoOffer\n}) => {\n  _s();\n\n  const [{\n    name: currentUserName\n  }] = useAuthentication();\n  const ownStream = useRef();\n  const ownVideoRef = useRef();\n  const foreignVideoRef = useRef();\n  useLayoutEffect(() => {}, []);\n\n  const onVideo = async name => {};\n\n  const onAudio = name => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"ownVideo\",\n            ref: ownVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"remote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"foreignVideo\",\n            ref: foreignVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            controls: false,\n            style: {\n              height: \"300px\",\n              width: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(_WebRTCChat, \"XzCYW2o45EP2XeL4JQxMtwsR8bM=\", false, function () {\n  return [useAuthentication];\n});\n\nconst WebRTCChat = socketConnector(dispatch => {\n  return {\n    emitVideoOffer: (offer, from, to) => dispatch({\n      type: \"video:offer\",\n      offer,\n      from,\n      to\n    })\n  };\n})(_WebRTCChat);\nexport { WebRTCChat };","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/web-rtc-chat/WebRTCChat.tsx"],"names":["React","useLayoutEffect","useRef","useAuthentication","socketConnector","WebRTC","UserList","LogoutButton","SOCKET_ADDRESS","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","connectVideo","videoRef","stream","current","srcObject","webRTC","iceServers","urls","socket","url","options","path","on","console","log","_WebRTCChat","emitVideoOffer","name","currentUserName","ownStream","ownVideoRef","foreignVideoRef","onVideo","onAudio","height","width","WebRTCChat","dispatch","offer","from","to","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\nimport { socket } from \"../../socket/socket\";\nimport { socketConnector } from \"../../socket/react-socket-connector/react-socket-connector\";\nimport { RTCPeerConnectionConfig, WebRTC } from \"../chat/WebRTC\";\nimport { UserList } from \"../chat/components/user-list/UserList\";\nimport { LogoutButton } from \"../chat/components/logout-button/logout-button\";\nimport { SOCKET_ADDRESS } from \"../../evn\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst connectVideo = (videoRef: any, stream: any) => {\n  videoRef.current.srcObject = stream;\n};\n\nconst webRTC = new WebRTC({\n  iceServers: [{ urls: \"stun:stun.1.google.com:19302\" }],\n  socket: {\n    url: SOCKET_ADDRESS,\n    options: {\n      path: \"/socket\",\n    },\n  },\n});\n\nwebRTC.on(\"connect\", () => {\n  console.log(\"connected\");\n});\nconst _WebRTCChat = ({ emitVideoOffer }: any) => {\n  const [{ name: currentUserName }] = useAuthentication();\n  const ownStream = useRef<any>();\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n\n  useLayoutEffect(() => {}, []);\n\n  const onVideo = async (name: string) => {};\n\n  const onAudio = (name: string) => {};\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      <LogoutButton />\n      <div>\n        <div>\n          <div>local</div>\n          <div>\n            <video\n              id={\"ownVideo\"}\n              ref={ownVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>remote</div>\n          <div>\n            <video\n              id={\"foreignVideo\"}\n              ref={foreignVideoRef}\n              autoPlay\n              playsInline\n              controls={false}\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst WebRTCChat = socketConnector((dispatch) => {\n  return {\n    emitVideoOffer: (offer: any, from: string, to: string) =>\n      dispatch({ type: \"video:offer\", offer, from, to }),\n  };\n})(_WebRTCChat);\nexport { WebRTCChat };\n"]},"metadata":{},"sourceType":"module"}