{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/components/LoginInput.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useAuthentication } from \"../../../context/authentication/Authentication.context\";\nimport { LabeledInput } from \"../../../components/labeled-input/LabeledInput\";\n\nconst LoginInput = () => {\n  _s();\n\n  const [_, dispatch] = useAuthentication();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (name, password) => {\n    if (name && password) {\n      dispatch({\n        type: \"login\",\n        payload: {\n          name,\n          password\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LabeledInput, {\n      placeholder: \"Name\",\n      value: name,\n      type: \"text\",\n      label: \"Name\",\n      id: \"nameInput\",\n      onChange: event => setName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabeledInput, {\n      placeholder: \"Password\",\n      value: password,\n      type: \"password\",\n      label: \"Password\",\n      id: \"passwordInput\",\n      onChange: event => setPassword(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {},\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginInput, \"Qr5kmySi2oMeaw3A0qKj49TlXXw=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = LoginInput;\nexport { LoginInput };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInput\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/login/components/LoginInput.component.tsx"],"names":["React","useState","useAuthentication","LabeledInput","LoginInput","_","dispatch","name","setName","password","setPassword","login","type","payload","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,wDAAlC;AACA,SAASC,YAAT,QAA6B,gDAA7B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,CAAD,EAAIC,QAAJ,IAAgBJ,iBAAiB,EAAvC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,KAAK,GAAG,CAACJ,IAAD,EAAeE,QAAf,KAAoC;AAChD,QAAIF,IAAI,IAAIE,QAAZ,EAAqB;AACnBH,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAAEN,UAAAA,IAAF;AAAQE,UAAAA;AAAR;AAA1B,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,WAAW,EAAE,MADf;AAEE,MAAA,KAAK,EAAEF,IAFT;AAGE,MAAA,IAAI,EAAE,MAHR;AAIE,MAAA,KAAK,EAAE,MAJT;AAKE,MAAA,EAAE,EAAE,WALN;AAME,MAAA,QAAQ,EAAGO,KAAD,IAAWN,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AAN9B;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,YAAD;AACE,MAAA,WAAW,EAAE,UADf;AAEE,MAAA,KAAK,EAAEP,QAFT;AAGE,MAAA,IAAI,EAAE,UAHR;AAIE,MAAA,KAAK,EAAE,UAJT;AAKE,MAAA,EAAE,EAAE,eALN;AAME,MAAA,QAAQ,EAAGK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AANlC;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,CAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAlCD;;GAAMZ,U;UACkBF,iB;;;KADlBE,U;AAoCN,SAASA,UAAT","sourcesContent":["import React, { useState } from \"react\";\nimport { useAuthentication } from \"../../../context/authentication/Authentication.context\";\nimport { LabeledInput } from \"../../../components/labeled-input/LabeledInput\";\n\nconst LoginInput = () => {\n  const [_, dispatch] = useAuthentication();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (name: string, password: string) => {\n    if (name && password){\n      dispatch({ type: \"login\", payload: { name, password } });\n    }\n  };\n\n  return (\n    <div>\n      <LabeledInput\n        placeholder={\"Name\"}\n        value={name}\n        type={\"text\"}\n        label={\"Name\"}\n        id={\"nameInput\"}\n        onChange={(event) => setName(event.target.value)}\n      />\n      <LabeledInput\n        placeholder={\"Password\"}\n        value={password}\n        type={\"password\"}\n        label={\"Password\"}\n        id={\"passwordInput\"}\n        onChange={(event) => setPassword(event.target.value)}\n      />\n      <div>\n        <button onClick={() => {}}>Login</button>\n      </div>\n    </div>\n  );\n};\n\nexport { LoginInput };\n"]},"metadata":{},"sourceType":"module"}