{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { socket } from \"../../socket/socket\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst constraints = {\n  video: true,\n  audio: false\n};\nlet localStream = null;\nconst remoteStream = new MediaStream();\nconst configuration = {\n  iceServers: [{\n    urls: \"turn:10.103.0.246:3478\",\n    username: \"username\",\n    credential: \"password\"\n  }]\n};\nconst peerConnection = new RTCPeerConnection(configuration);\n\nconst ChatPage = () => {\n  _s();\n\n  const [hasOffer, setHasOffer] = useState(false);\n  const ownVideoRef = useRef();\n  const foreignVideoRef = useRef();\n  const offerRef = useRef({\n    from: null,\n    offer: null\n  });\n  const [isCalling, setIsCalling] = useState(false);\n  const [{\n    name: currentUserName\n  }] = useAuthentication();\n  useEffect(() => {\n    peerConnection.addEventListener(\"signalingstatechange\", event => {\n      console.log(\"signalingstatechange: \", event);\n    });\n    peerConnection.addEventListener(\"icecandidate\", event => {\n      console.log(\"icecandidate: \", event);\n    });\n  }, []); // useSubscription(\"video:answer\", async ({ answer, from }) => {\n  //   const remoteDesc = new RTCSessionDescription(answer);\n  //   await peerConnection.setRemoteDescription(remoteDesc);\n  //   setIsCalling(false);\n  //\n  //   localStream.getTracks().forEach((track: any) => {\n  //     peerConnection.addTrack(track, localStream);\n  //   });\n  //\n  //   // console.log(answer, from);\n  // });\n  // useSubscription(\"video:offer\", async ({ offer, from }) => {\n  //   setHasOffer(true);\n  //   offerRef.current = { offer, from };\n  //   // console.log(offer, from);\n  // });\n\n  useEffect(() => {\n    socket.on(\"video:answer\", async data => {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      signalingChannel.send({\n        answer: answer\n      });\n    });\n  }, []);\n\n  const pickUp = async () => {\n    if (offerRef.current.offer) {\n      // create answer\n      const {\n        from,\n        offer\n      } = offerRef.current;\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      setHasOffer(false);\n      socket.emit(\"video:answer\", {\n        answer,\n        to: from,\n        from: currentUserName\n      });\n    }\n  };\n\n  const hangUp = () => {\n    if (offerRef.current) {// implement call decline\n    }\n  };\n\n  const onVideo = async name => {\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    socket.on(\"video:answer\", async data => {\n      console.log(data);\n      const remoteDesc = new RTCSessionDescription(data.answer);\n      await peerConnection.setRemoteDescription(remoteDesc);\n    });\n    socket.emit(\"video:offer\", {\n      offer,\n      to: name,\n      from: currentUserName\n    });\n    peerConnection.addEventListener(\"track\", ({\n      track\n    }) => {\n      console.log(\"track: \", track); // @ts-ignore\n\n      remoteStream.addTrack(track);\n    });\n    setIsCalling(true);\n  };\n\n  const onAudio = name => {};\n\n  useLayoutEffect(() => {\n    const connect = async () => {\n      try {\n        localStream = await openMediaDevices(constraints);\n        ownVideoRef.current.srcObject = localStream;\n        foreignVideoRef.current.srcObject = remoteStream;\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    connect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      onAudio: onAudio,\n      onVideo: onVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), hasOffer && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"CALLING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pickUp,\n        children: \"PICK UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), isCalling && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"CALLING...!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"ownVideo\",\n      ref: ownVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      controls: false,\n      style: {\n        height: \"300px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"foreignVideo\",\n      ref: foreignVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      controls: false,\n      style: {\n        height: \"300px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"XBj0in80TekP/leJoC8Yja3WciU=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = ChatPage;\nexport { ChatPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/stanislavpanchenko/Documents/development/web-rtc/web-rtc-client/src/pages/chat/Chat.page.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","LogoutButton","UserList","socket","useAuthentication","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","video","audio","localStream","remoteStream","MediaStream","configuration","iceServers","urls","username","credential","peerConnection","RTCPeerConnection","ChatPage","hasOffer","setHasOffer","ownVideoRef","foreignVideoRef","offerRef","from","offer","isCalling","setIsCalling","name","currentUserName","addEventListener","event","console","log","on","data","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","signalingChannel","send","pickUp","current","emit","to","hangUp","onVideo","createOffer","remoteDesc","track","addTrack","onAudio","connect","srcObject","e","error","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { LogoutButton } from \"./components/logout-button/logout-button\";\nimport { UserList } from \"./components/user-list/UserList\";\nimport { useSubscription } from \"../../socket/use-subscription/useSubscription\";\nimport { socket } from \"../../socket/socket\";\nimport { useAuthentication } from \"../../context/authentication/Authentication.context\";\n\nconst openMediaDevices = async (constraints: any) => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nconst constraints = { video: true, audio: false };\nlet localStream: any = null;\n\nconst remoteStream = new MediaStream();\n\nconst configuration = {\n  iceServers: [\n    {\n      urls: \"turn:10.103.0.246:3478\",\n      username: \"username\",\n      credential: \"password\",\n    },\n  ],\n};\nconst peerConnection = new RTCPeerConnection(configuration);\n\nconst ChatPage = () => {\n  const [hasOffer, setHasOffer] = useState(false);\n  const ownVideoRef = useRef<any>();\n  const foreignVideoRef = useRef<any>();\n  const offerRef = useRef<{ from: string | null; offer: any }>({\n    from: null,\n    offer: null,\n  });\n  const [isCalling, setIsCalling] = useState(false);\n  const [{ name: currentUserName }] = useAuthentication();\n\n  useEffect(() => {\n    peerConnection.addEventListener(\"signalingstatechange\", (event) => {\n      console.log(\"signalingstatechange: \", event);\n    });\n    peerConnection.addEventListener(\"icecandidate\", (event) => {\n      console.log(\"icecandidate: \", event);\n    });\n  }, []);\n\n  // useSubscription(\"video:answer\", async ({ answer, from }) => {\n  //   const remoteDesc = new RTCSessionDescription(answer);\n  //   await peerConnection.setRemoteDescription(remoteDesc);\n  //   setIsCalling(false);\n  //\n  //   localStream.getTracks().forEach((track: any) => {\n  //     peerConnection.addTrack(track, localStream);\n  //   });\n  //\n  //   // console.log(answer, from);\n  // });\n\n  // useSubscription(\"video:offer\", async ({ offer, from }) => {\n  //   setHasOffer(true);\n  //   offerRef.current = { offer, from };\n  //   // console.log(offer, from);\n  // });\n\n  useEffect(() => {\n    socket.on(\"video:answer\", async (data) => {\n      await peerConnection.setRemoteDescription(\n        new RTCSessionDescription(data.offer)\n      );\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      signalingChannel.send({ answer: answer });\n    });\n  }, []);\n\n  const pickUp = async () => {\n    if (offerRef.current.offer) {\n      // create answer\n      const { from, offer } = offerRef.current;\n      await peerConnection.setRemoteDescription(\n        new RTCSessionDescription(offer)\n      );\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      setHasOffer(false);\n      socket.emit(\"video:answer\", { answer, to: from, from: currentUserName });\n    }\n  };\n\n  const hangUp = () => {\n    if (offerRef.current) {\n      // implement call decline\n    }\n  };\n\n  const onVideo = async (name: string) => {\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n\n    socket.on(\"video:answer\", async (data: any) => {\n      console.log(data);\n      const remoteDesc = new RTCSessionDescription(data.answer);\n      await peerConnection.setRemoteDescription(remoteDesc);\n    });\n\n    socket.emit(\"video:offer\", { offer, to: name, from: currentUserName });\n\n    peerConnection.addEventListener(\"track\", ({ track }) => {\n      console.log(\"track: \", track);\n      // @ts-ignore\n      remoteStream.addTrack(track);\n    });\n    setIsCalling(true);\n  };\n\n  const onAudio = (name: string) => {};\n\n  useLayoutEffect(() => {\n    const connect = async () => {\n      try {\n        localStream = await openMediaDevices(constraints);\n        ownVideoRef.current.srcObject = localStream;\n        foreignVideoRef.current.srcObject = remoteStream;\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    connect();\n  }, []);\n\n  return (\n    <div>\n      <UserList onAudio={onAudio} onVideo={onVideo} />\n      {hasOffer && (\n        <div>\n          <div>CALLING....</div>\n          <button onClick={pickUp}>PICK UP</button>\n          {/*<button>HANG UP</button>*/}\n        </div>\n      )}\n      {isCalling && (\n        <div>\n          <div>CALLING...!</div>\n        </div>\n      )}\n      <LogoutButton />\n\n      <video\n        id={\"ownVideo\"}\n        ref={ownVideoRef}\n        autoPlay\n        playsInline\n        controls={false}\n        style={{\n          height: \"300px\",\n          width: \"300px\",\n        }}\n      />\n      <video\n        id={\"foreignVideo\"}\n        ref={foreignVideoRef}\n        autoPlay\n        playsInline\n        controls={false}\n        style={{\n          height: \"300px\",\n          width: \"300px\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport { ChatPage };\n"]},"metadata":{},"sourceType":"module"}